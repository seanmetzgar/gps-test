{"version":3,"sources":["scripts.js"],"names":["Number","prototype","between","min","max","rVal","this","toRad","Math","PI","views","navigation","settings","destination","$appWrapper","$compass","$currentPosition","$destinationPosition","$accuracy","$distance","currentPosition","destinationPosition","geolocationWatch","defaults","imperial","hemispheres","format","zerofill","checkBoolean","value","undefined","setCompassRotation","rotation","$el","currentRotation","difference","jQuery","data","abs","css","-webkit-transform","-moz-transform","-ms-transform","-o-transform","transform","zoom","updatePosition","position","$el2","find","html","formatDisplayCoordinate","coords","latitude","next","longitude","accuracy","reduceUnits","distance","units","coord","type","currentHemisphere","degrees","minutes","seconds","degreeParts","minutesParts","absDegrees","toPrecision","toString","floor","ceil","haversine","position1","position2","lat1","lon1","lat2","lon2","dLat","dLon","R","d","atan2","sqrt","sin","cos","loadSettings","loadedSettings","localStorage","getItem","JSON","parse","initializeGeolocationWatch","navigator","geolocation","watchPosition","initializeApp","$compassWrapper","$positionWrapper","$distanceWrapper","$","extend","addClass","appendTo","prependTo","document","ready"],"mappings":"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","file":"scripts.min.js","sourcesContent":["\"use strict\";\nNumber.prototype.between = function(min, max) {\n\tvar rVal = false;\n\tif (typeof min === \"number\" && typeof max === \"number\") {\n\t\trVal = (this >= min && this <= max) ? true : false;\n\t}\n\treturn rVal;\n};\nNumber.prototype.toRad = function() {\n   return this * Math.PI / 180;\n};\n\n//Globals\nvar views = {\n\tnavigation : null,\n\tsettings : null,\n\tdestination: null\n};\nvar $appWrapper = null;\nvar $compass = null;\nvar $currentPosition = null;\nvar $destinationPosition = null;\nvar $accuracy = null;\nvar $distance = null;\nvar currentPosition = false;\nvar destinationPosition = false;\nvar geolocationWatch = false;\nvar defaults = {\n\timperial : true,\n\themispheres : true,\n\tformat : \"DMS\",\n\tdestination : false,\n\tzerofill : false\n};\nvar settings = false;\n\n//Functions\nvar checkBoolean = function(value) {\n\tvar rVal = (typeof value !== undefined &&\n\t\t(typeof value === \"boolean\" ||\n\t\t\t(typeof value === \"number\" &&\n\t\t\t\t(value === 1 || value === 0)\n\t\t\t)\n\t\t)\n\t) ? true : false;\n\n\treturn rVal;\n};\n\nvar setCompassRotation = function(rotation, $el) {\n\tvar currentRotation = false;\n\tvar animateDirection = false;\n\tvar difference = null;\n\n\t$el = (typeof $el == \"object\" && $el instanceof jQuery) ? $el : $compass;\n\n\tcurrentRotation = $el.data(\"rotation\");\n\tif (typeof currentRotation !== \"number\") { $el.data(\"rotation\", 0); }\n\tif (typeof rotation === \"number\" && rotation.between(0,360)) {\n\t\tdifference = currentRotation - rotation;\n\n\t\tdifference = (currentRotation < rotation) ? Math.abs(difference) : difference;\n\t\tanimateDirection = (difference > 180) ? \"anticlockwise\" : \"clockwise\";\n\n\t\t$el.data(\"rotation\", rotation).css({\n\t\t  '-webkit-transform' : 'rotate('+rotation+'deg)',\n\t\t     '-moz-transform' : 'rotate('+rotation+'deg)',\n\t\t      '-ms-transform' : 'rotate('+rotation+'deg)',\n\t\t       '-o-transform' : 'rotate('+rotation+'deg)',\n\t\t          'transform' : 'rotate('+rotation+'deg)',\n\t\t               'zoom' : 1\n\n\t\t});\n\t}\n};\n\nvar updatePosition = function(position, $el, $el2) {\n\t$el = (typeof $el == \"object\" && $el instanceof jQuery) ? $el : $currentPosition;\n\t$el2 = (typeof $el2 == \"object\" && $el2 instanceof jQuery) ? $el2 : $accuracy;\n\n\tcurrentPosition = position; //Update global variable\n\n    $el.find(\".latitude\").html(formatDisplayCoordinate(position.coords.latitude, \"lat\"))\n    \t.next(\".longitude\").html(formatDisplayCoordinate(position.coords.longitude, \"lon\"));\n    $el2.html(position.coords.accuracy + \"m\");\n};\n\nvar reduceUnits = function(distance, imperial) {\n\tvar units = false;\n\n\timperial = (checkBoolean(imperial)) ? imperial : settings.imperial;\n\n\tunits = (imperial) ? \"mi\" : \"km\";\n\n\tif (imperial) {\n\t\tif (distance < 0.5) {\n\t\t\t//If less than 1/2 mile, reduce to yards\n\t\t\tdistance = distance * 1760;\n\t\t\tunits = \"yd\";\n\t\t\tif (distance < 200) {\n\t\t\t\tdistance = distance * 3;\n\t\t\t\tunits = \"ft\";\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (distance < 0.5) {\n\t\t\tdistance = distance * 1000;\n\t\t\tunits = \"m\";\n\t\t}\n\t}\n\treturn {distance : distance, units : units};\n};\n\nvar formatDisplayCoordinate = function(coord, type, hemispheres, format, zerofill) {\n\tvar currentHemisphere = false;\n\tvar degrees = false;\n\tvar minutes = false;\n\tvar seconds = false;\n\tvar degreeParts = false;\n\tvar minutesParts = false;\n\tvar absDegrees = false;\n\n\themispheres = (checkBoolean(hemispheres)) ? hemispheres : settings.hemispheres;\n\tformat = (typeof format === \"string\") ? format : settings.format;\n\tzerofill = (checkBoolean(zerofill)) ? zerofill : settings.zerofill;\n\n\tif (type === \"latitude\" || type === \"lat\") {\n\t\tcurrentHemisphere = (coord > 0) ? \"N \" : \"S \";\n\t} else {\n\t\tcurrentHemisphere = (coord > 0) ? \"E \" : \"W \";\n\t}\n\n\tabsDegrees = Math.abs(coord);\n\n\tif (format === \"D\" || format === \"DD\") {\n\t\tif (absDegrees >= 100) {\n\t\t\tabsDegrees = absDegrees.toPrecision(8).toString();\n\t\t} else if (coord >= 10 || coord <= -10) {\n\t\t\tabsDegrees = (zerofill) ?\n\t\t\t\t\"0\" + absDegrees.toPrecision(7) :\n\t\t\t\tabsDegrees.toPrecision(7).toString();\n\t\t} else {\n\t\t\tabsDegrees = (zerofill) ?\n\t\t\t\t\"00\" + absDegrees.toPrecision(6) :\n\t\t\t\tabsDegrees.toPrecision(6).toString();\n\t\t}\n\n\t\tcoord = (hemispheres) ? \n\t\t\tcurrentHemisphere + absDegrees + \"&deg;\":\n\t\t\t((coord < 0) ? \"-\" : \"\") + absDegrees + \"&deg;\";\n\t} else {\n\t\tdegreeParts = [\n\t\t\tcoord > 0 ? Math.floor(coord) : Math.ceil(coord),\n\t\t\tMath.abs(coord % 1)\n\t\t];\n\t\tdegrees = degreeParts[0];\n\t\tabsDegrees = Math.abs(degrees);\n\t\tif (absDegrees >= 10 && absDegrees < 100) {\n\t\t\tabsDegrees = (zerofill) ?\n\t\t\t\t\"0\" + absDegrees :\n\t\t\t\tabsDegrees.toString();\n\t\t} else if (absDegrees < 10) {\n\t\t\tabsDegrees = (zerofill) ?\n\t\t\t\t\"00\" + absDegrees :\n\t\t\t\tabsDegrees.toString();\n\t\t} else {\n\t\t\tabsDegrees = absDegrees.toString();\n\t\t}\n\t\tminutes = degreeParts[1] * 60;\n\n\t\tif (format === \"DMS\") {\n\t\t\tminutesParts = [\n\t\t\t\tMath.floor(minutes),\n\t\t\t\tMath.abs(minutes % 1)\n\t\t\t];\n\t\t\tminutes = minutesParts[0];\n\t\t\tseconds = (minutesParts[1] * 60);\n\n\t\t\tif (minutes < 10) {\n\t\t\t\tminutes = (zerofill) ?\n\t\t\t\t\t\"0\" + minutes :\n\t\t\t\t\tminutes.toString();\n\t\t\t}\n\n\t\t\tif (seconds >= 10) {\n\t\t\t\tseconds = seconds.toPrecision(4).toString();\n\t\t\t} else {\n\t\t\t\tseconds = (zerofill) ?\n\t\t\t\t\t\"0\" + seconds.toPrecision(3).toString() :\n\t\t\t\t\tseconds.toPrecision(3).toString();\n\t\t\t}\n\n\t\t\tcoord = (hemispheres) ?\n\t\t\t\tcurrentHemisphere + absDegrees + \"&deg; \" + minutes + \"' \" + seconds + \"\\\"\" :\n\t\t\t\t((coord < 0) ? \"-\" : \"\") + absDegrees + \"&deg; \" + minutes + \"' \" + seconds + \"\\\"\";\n\t\t} else {\n\t\t\tif (minutes >= 10) {\n\t\t\t\tminutes = minutes.toPrecision(5).toString();\n\t\t\t} else {\n\t\t\t\tminutes = (zerofill) ?\n\t\t\t\t\t\"0\" + minutes.toPrecision(4) :\n\t\t\t\t\tminutes.toPrecision(4).toString();\n\t\t\t}\n\n\t\t\tcoord = (hemispheres) ?\n\t\t\t\tcurrentHemisphere + absDegrees + \"&deg; \" + minutes + \"'\" :\n\t\t\t\t((degrees < 0) ? \"-\" : \"\") + absDegrees + \"&deg; \" + minutes + \"'\";\n\t\t}\n\t}\n\n\treturn coord;\n};\n\nvar haversine = function(position1, position2, imperial) {\n\tvar lat1 = position1.coords.latitude;\n\tvar lon1 = position1.coords.longitude;\n\tvar lat2 = position2.coords.latitude;\n\tvar lon2 = position2.coords.longitude;\n\tvar dLat = (lat2-lat1).toRad(); //Delta latitude in radians\n\tvar dLon = (lon2-lon1).toRad(); //Delta longitude in radians\n\tvar R = false;\n\tvar d = false;\n\n\t//Convert initial points to radians\n\tlat1 = lat1.toRad();\n\tlat2 = lat2.toRad();\n\tlon1 = lon1.toRad();\n\tlon2 = lon2.toRad();\n\n\timperial = (checkBoolean(imperial)) ? imperial : settings.imperial;\n\n\t// Set Radius of Earth based on unit type (mi : km)\n\tR = (imperial) ? 3959 : 6371;\n\n\t//Haversine Formula\n\td = R * 2 * Math.atan2(\n\t\tMath.sqrt(\n\t\t\tMath.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(lat1) * Math.cos(lat2) *\n            Math.sin(dLon / 2) * Math.sin(dLon / 2)\n\t\t),\n\t\tMath.sqrt(1 - (\n\t\t\tMath.sin(dLat / 2) * Math.sin(dLat / 2) +\n        \tMath.cos(lat1) * Math.cos(lat2) *\n        \tMath.sin(dLon / 2) * Math.sin(dLon / 2)\n\t\t))\n\t);\n\n\t//Reduce units and return\n\treturn reduceUnits(d, imperial);\n};\n\nvar loadSettings = function() {\n\tvar loadedSettings = {};\n\n\tif (typeof localStorage !== \"undefined\") {\n\t\tloadedSettings = localStorage.getItem(\"cacherSettings\");\n\t\tloadedSettings = (typeof loadedSettings === \"string\") ? JSON.parse(loadedSettings) : {};\n\t}\n\n\treturn loadedSettings;\n};\n\nvar initializeGeolocationWatch = function() {\n    if (navigator.geolocation) {\n        geolocationWatch = navigator.geolocation.watchPosition(updatePosition);\n    }\n};\n\nvar initializeApp = function() {\n\tvar $compassWrapper = null;\n\tvar $positionWrapper = null;\n\tvar $distanceWrapper = null;\n\n\t//Load Settings and Extend Defaults\n\tsettings = $.extend(defaults, loadSettings());\n\n\t//Init Views\n\tviews.navigation = $(\"<div></div>\").addClass(\"view\").addClass(\"navigation\").addClass(\"active\").appendTo($appWrapper);\n\tviews.settings = $(\"<div></div>\").addClass(\"view\").addClass(\"settings\").appendTo($appWrapper);\n\tviews.destination = $(\"<div></div>\").addClass(\"view\").addClass(\"destination\").appendTo($appWrapper);\n\n\t//Compass Elements\n\t$compassWrapper = $(\"<div></div>\").addClass(\"compass-wrapper\").appendTo(views.navigation);\n\t$compass = $(\"<div></div>\").addClass(\"compass\").prependTo($compassWrapper).data(\"rotation\", 0);\n\n\t//Distance & Accuracy Elements\n\t$distanceWrapper = $(\"<div></div>\").addClass(\"distance-wrapper\").appendTo($compassWrapper);\n\t$accuracy = $(\"<p></p>\").addClass(\"accuracy\").addClass(\"icon-signal\").appendTo($distanceWrapper);\n\t$distance = $(\"<p></p>\").addClass(\"distance\").appendTo($distanceWrapper);\n\n\t//Position Elements\n\t$positionWrapper = $(\"<div></div>\").addClass(\"position-wrapper\").appendTo(views.navigation);\n\t$currentPosition = $(\"<p></p>\").addClass(\"position\").addClass(\"current\").appendTo($positionWrapper);\n\t$destinationPosition = $(\"<p></p>\").addClass(\"position\").addClass(\"destination\").appendTo($positionWrapper);\n\t$positionWrapper.find(\".position\").html(\"<span class=\\\"latitude\\\"></span>\\n<span class=\\\"longitude\\\"></span>\");\n\n\t//Setup Compass & Location\n\tsetCompassRotation(0);\n\tinitializeGeolocationWatch();\n};\n\n$(document).ready(function() {\n\t$appWrapper = $(\".app-wrapper\");\n\tinitializeApp();\n});"]}